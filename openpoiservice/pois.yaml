get:
  tags:
  - "Places"
  summary: "Location Service (GET)"
  description: |
    Returns Points of Interest in the area surrounding a point or
    a line geometry. Use the post endpoint for requests that exceed the get
    character limit.

    - **pois:** Either `geometry` or `bbox` are required. `radius` required depending on `geometry`.
    - **category_stats:** Either `geometry` or `bbox` are required. `radius` required depending on `geometry`.
    - **category_list:** Additionally to this List the category groups and ids can be found [here](https://github.com/GIScience/openrouteservice-docs).
  parameters:
  - name: "api_key"
    in: "query"
    description: |
      Insert your API Key here.
    type: "string"
    required: true
    default: "your-api-key"  
  - name: "request"
    in: "query"
    description: "`pois` will return POI geometry as well as requested details.\
      \ `category_stats` returns a POI count for each requested category. `category_list`\
      \ returns a list of all categories (only the id parameter will be considered).\n"
    required: true
    type: "string"
    enum:
    - "pois"
    - "category_stats"
    - "category_list"
    default: "pois"
  - name: "category_group_ids"
    in: "query"
    description: "Comma separated list of category group ids.\n"
    type: "string"
    default: "420"
  - name: "category_ids"
    in: "query"
    description: "Comma separated list of category ids.\n"
    type: "string"
  - name: "name"
    in: "query"
    description: "Name to filter the POIs by. **Only finds exact matches**"
    type: "string"
  - name: "wheelchair"
    in: "query"
    description: "Filter returned features by wheelchair tag entries.\n"
    type: "string"
    enum:
    - "true"
    - "false"
    - "limited"
  - name: "smoking"
    in: "query"
    description: "Filter returned features by wheelchair tag entries.\n"
    type: "string"
    enum:
    - "true"
    - "false"
  - name: "fee"
    in: "query"
    description: "Filter returned features by fee tag entries.\n"
    type: "string"
    enum:
    - "true"
    - "false"
  - name: "bbox"
    in: "query"
    description: |
      Defines a clipping bounding box. Can be defined additionally to `geometry`.
    type: "array"
    #default:
    #  - 8.168082
    #  - 47.272105
    #  - 8.169165
    #  - 48.272186
    items:
      type: "number"
      format: "double"
    maxItems: 4
    minItems: 4
  - name: "geometry"
    in: "query"
    description: "GeoJSON geometry object (Point, Linestring or Polygon)\n"
    type: "string"
    default: "{type: LineString, coordinates:[[8.167426,49.272556],[8.167588,47.272445],[8.168082,47.272105],[8.168224,47.271917],[8.16831,47.271941],[8.168926,47.272216],[8.169054,47.272278],[8.169165,47.272186],[8.169256,47.272103],[8.16948,47.271921],[8.170129,47.271408],[8.170265,47.271295],[8.170701,47.27097],[8.171496,47.270485],[8.171796,47.270296]]}"
  - name: "radius"
    in: "query"
    description: |
      Search radius in meters around the given (might be limited in the backend).
      **Required if geometry is a Point or Linestring**
    type: "number"
    maximum: 1000
    minimum: 0
    format: "double"
    default: 500
  - name: "limit"
    in: "query"
    description: |
      Maximum number of returned objects (might be limited in the
      backend). **For** `request=pois` **only.**
    type: "integer"
    format: "int64"
  - name: "sortby"
    in: "query"
    description: |
      Sorts the returned features by _distance_ or _category_. **For** `request=pois` **only.**
    type: "string"
    enum:
    - "distance"
    - "category"
  - name: "details"
    in: "query"
    description: |
      Pipe (|) separated list of desired details. **For** `request=pois` **only.**
    type: "array"
    items:
      type: "string"
      enum:
      - "address"
      - "contact"
      - "attributes"
    collectionFormat: "pipes"
    #default: 
    #  - "address"
    #  - "contact"
    #  - "attributes"
    uniqueItems: true
  - name: "id"
    in: "query"
    description: "Arbitrary identification string of the request reflected in\
      \ the meta information."
    type: "string"
  responses:
    200:
      description: "Standard response for successfully processed requests. Returns\
        \ JSON."
      schema:
        $ref: "#/definitions/LocationsPoiResponse"
    400:
      description: "The request is incorrect and therefore can not be processed."
    401:
      description: "Authorization field missing."
    403:
      description: "Key not authorised."
    405:
      description: "The specified HTTP method is not supported. For more details,\
        \ refer to the EndPoint documentation."
    413:
      description: "The request is larger than the server is able to process,\
        \ the data provided in the request exceeds the capacity limit."
    500:
      description: |
        An unexpected error was encountered and more detailed internal
         errorcode is provided.

        | Internal Code | Description                                        |
        |:-------------:|----------------------------------------------------|
        | 4000 |  Unable to parse JSON request. |
        | 4001 |  Required parameter is missing. |
        | 4002 |  Invalid parameter format. |
        | 4003 |  Invalid parameter value. |
        | 4004 |  Parameter value exceeds the maximum allowed limit. |
        | 4006 |  Unable to parse the request to the export handler. |
        | 4007 |  Unsupported export format. |
        | 4008 |  Empty Element. |
        | 4099 |  Unknown internal error. |
      schema:
        $ref: "#/definitions/error"
    501:
      description: "Indicates that the server does not support the functionality\
        \ needed to fulfill the request."
    503:
      description: "The server is currently unavailable due to overload or maintenance."
post:
  tags:
  - "Places"
  summary: "Location Service (POST)"
  description: |
    Returns Points of Interest in the area surrounding a geometry.
    
    Body example:
    ```{'request':'pois','filter':{'category_group_ids':[560]},'details':'address','limit':1000,'radius':1000,'sortby':'category','geometry':{'type':'LineString','coordinates':[[8.167426,49.272556],[8.167588,47.272445],[8.168082,47.272105],[8.168224,47.271917],[8.16831,47.271941],[8.168926,47.272216],[8.169054,47.272278],[8.169165,47.272186],[8.169256,47.272103],[8.16948,47.271921],[8.170129,47.271408],[8.170265,47.271295],[8.170701,47.27097],[8.171496,47.270485],[8.171796,47.270296]]}}```
  parameters:
  - name: "api_key"
    in: "query"
    description: |
      Insert your API Key here.
    type: "string"
    required: true
    default: "your-api-key"
  - name: "body"
    in: "body"
    description: "body for a post request"
    schema:
      $ref: "#/definitions/LocationsBody"
  responses:
    200:
      description: "Standard response for successfully processed requests. Returns\
        \ JSON."
      schema:
        $ref: "#/definitions/LocationsPoiResponse"
    400:
      description: "The request is incorrect and therefore can not be processed."
    401:
      description: "Authorization field missing."
    403:
      description: "Key not authorised."
    405:
      description: "The specified HTTP method is not supported. For more details,\
        \ refer to the EndPoint documentation."
    413:
      description: "The request is larger than the server is able to process,\
        \ the data provided in the request exceeds the capacity limit."
    500:
      description: |
        An unexpected error was encountered and more detailed internal
        errorcode is provided.

        | Internal Code | Description                                        |
        |:-------------:|----------------------------------------------------|
        | 4000 |  Unable to parse JSON request. |
        | 4001 |  Required parameter is missing. |
        | 4002 |  Invalid parameter format. |
        | 4003 |  Invalid parameter value. |
        | 4004 |  Parameter value exceeds the maximum allowed limit. |
        | 4006 |  Unable to parse the request to the export handler. |
        | 4007 |  Unsupported export format. |
        | 4008 |  Empty Element. |
        | 4099 |  Unknown internal error. |
      schema:
        type: "array"
        items:
          $ref: "#/definitions/error"
    501:
      description: "Indicates that the server does not support the functionality\
        \ needed to fulfill the request."
    503:
      description: "The server is currently unavailable due to overload or maintenance."